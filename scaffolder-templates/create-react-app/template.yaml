apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: update-app-react-template
  title: Update App React Templatee
  description: Create a new CRA website project
  tags:
    - react
    - cra
spec:
  owner: web@example.com
  type: website
  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: techdocs-build
      name: Build TechDocs
      action: execute:shell
      input:
        shell: bash
        workingDirectory: ./skeleton
        script: |
          set -e
          echo "=== Empezando la construcción de TechDocs ==="
          if ! command -v python3 &> /dev/null; then
            echo "Python no está instalado. Instalando..."
            apt-get update && apt-get install -y python3 python3-pip
          fi
          pip install mkdocs mkdocs-techdocs-core || { echo "Fallo la instalación de MkDocs"; exit 1; }
          echo "Construyendo documentación con MkDocs..."
          mkdocs build || { echo "Falló la construcción de la documentación"; exit 1; }
          echo "=== Construcción de TechDocs finalizada ==="

    - id: techdocs-deploy
      name: Deploy TechDocs to S3
      action: execute:shell
      input:
        shell: bash
        workingDirectory: ./skeleton
        script: |
          set -e
          echo "=== Empezando el despliegue de TechDocs ==="
          SITE_NAME=$(grep '^site_name:' mkdocs.yml | cut -d ':' -f2 | xargs)
          if [ -z "$SITE_NAME" ]; then
            echo "No se pudo extraer el site_name"; exit 1;
          fi
          aws s3 sync site/ s3://incibe-poc-security-files/techdocs/default/component/$SITE_NAME --recursive || { echo "Falló el despliegue a S3"; exit 1; }
          echo "=== Despliegue de TechDocs finalizado ==="

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
